Version 3.2 HI-TECH Software Intermediate Code
[p mainexit ]
"777 C:\Program Files (x86)\Microchip\xc8\v1.33\include\pic12f675.h
[v _TRISIO `Vuc ~T0 @X0 0 e@133 ]
"210
[v _GPIO `Vuc ~T0 @X0 0 e@5 ]
"316
[v _INTCON `Vuc ~T0 @X0 0 e@11 ]
"826
[v _PIE1 `Vuc ~T0 @X0 0 e@140 ]
"708
[v _OPTION_REG `Vuc ~T0 @X0 0 e@129 ]
"625
[v _ADCON0 `Vuc ~T0 @X0 0 e@31 ]
"1372
[v _ANSEL `Vuc ~T0 @X0 0 e@159 ]
"548
[v _CMCON `Vuc ~T0 @X0 0 e@25 ]
"42 C:\Program Files (x86)\Microchip\xc8\v1.33\include\eeprom_routines.h
[v _eeprom_read `(uc ~T0 @X0 0 ef1`uc ]
"51 main.c
[v _button_action `(v ~T0 @X0 0 ef ]
"1521 C:\Program Files (x86)\Microchip\xc8\v1.33\include\pic12f675.h
[v _GP2 `Vb ~T0 @X0 0 e@42 ]
"1519
[v _GP1 `Vb ~T0 @X0 0 e@41 ]
"1525
[v _GP4 `Vb ~T0 @X0 0 e@44 ]
"1527
[v _GP5 `Vb ~T0 @X0 0 e@45 ]
"606
[v _ADRESH `Vuc ~T0 @X0 0 e@30 ]
"1353
[v _ADRESL `Vuc ~T0 @X0 0 e@158 ]
"1515
[v _GO_nDONE `Vb ~T0 @X0 0 e@249 ]
"41 C:\Program Files (x86)\Microchip\xc8\v1.33\include\eeprom_routines.h
[v _eeprom_write `(v ~T0 @X0 0 ef2`uc`uc ]
"1457 C:\Program Files (x86)\Microchip\xc8\v1.33\include\pic12f675.h
[v _ADIF `Vb ~T0 @X0 0 e@102 ]
"1597
[v _T0IF `Vb ~T0 @X0 0 e@90 ]
"1523
[v _GP3 `Vb ~T0 @X0 0 e@43 ]
[; ;stdio.h: 8: typedef int ptrdiff_t;
[; ;stdio.h: 9: typedef unsigned size_t;
[; ;stdio.h: 10: typedef unsigned short wchar_t;
[; ;stdarg.h: 7: typedef void * va_list[1];
[; ;stdarg.h: 10: extern void * __va_start(void);
[; ;stdarg.h: 13: extern void * __va_arg(void *, ...);
[; ;stdio.h: 23: extern int errno;
[; ;stdio.h: 54: struct __prbuf
[; ;stdio.h: 55: {
[; ;stdio.h: 56: char * ptr;
[; ;stdio.h: 57: void (* func)(char);
[; ;stdio.h: 58: };
[; ;conio.h: 17: extern int errno;
[; ;conio.h: 20: extern void init_uart(void);
[; ;conio.h: 22: extern char getch(void);
[; ;conio.h: 23: extern char getche(void);
[; ;conio.h: 24: extern void putch(char);
[; ;conio.h: 25: extern void ungetch(char);
[; ;conio.h: 27: extern __bit kbhit(void);
[; ;conio.h: 31: extern char * cgets(char *);
[; ;conio.h: 32: extern void cputs(const char *);
[; ;stdio.h: 99: extern int cprintf(char *, ...);
[; ;stdio.h: 104: extern int _doprnt(struct __prbuf *, const register char *, register va_list);
[; ;stdio.h: 194: extern char * gets(char *);
[; ;stdio.h: 195: extern int puts(const char *);
[; ;stdio.h: 196: extern int scanf(const char *, ...) __attribute__((unsupported("scanf() is not supported by this compiler")));
[; ;stdio.h: 197: extern int sscanf(const char *, const char *, ...) __attribute__((unsupported("sscanf() is not supported by this compiler")));
[; ;stdio.h: 198: extern int vprintf(const char *, va_list) __attribute__((unsupported("vprintf() is not supported by this compiler")));
[; ;stdio.h: 199: extern int vsprintf(char *, const char *, va_list) __attribute__((unsupported("vsprintf() is not supported by this compiler")));
[; ;stdio.h: 200: extern int vscanf(const char *, va_list ap) __attribute__((unsupported("vscanf() is not supported by this compiler")));
[; ;stdio.h: 201: extern int vsscanf(const char *, const char *, va_list) __attribute__((unsupported("vsscanf() is not supported by this compiler")));
[; ;stdio.h: 205: extern int sprintf(char *, const char *, ...);
[; ;stdio.h: 206: extern int printf(const char *, ...);
[; ;stdlib.h: 27: typedef struct {
[; ;stdlib.h: 28: int rem;
[; ;stdlib.h: 29: int quot;
[; ;stdlib.h: 30: } div_t;
[; ;stdlib.h: 31: typedef struct {
[; ;stdlib.h: 32: unsigned rem;
[; ;stdlib.h: 33: unsigned quot;
[; ;stdlib.h: 34: } udiv_t;
[; ;stdlib.h: 35: typedef struct {
[; ;stdlib.h: 36: long quot;
[; ;stdlib.h: 37: long rem;
[; ;stdlib.h: 38: } ldiv_t;
[; ;stdlib.h: 39: typedef struct {
[; ;stdlib.h: 40: unsigned long quot;
[; ;stdlib.h: 41: unsigned long rem;
[; ;stdlib.h: 42: } uldiv_t;
[; ;stdlib.h: 65: extern double atof(const char *);
[; ;stdlib.h: 66: extern double strtod(const char *, const char **);
[; ;stdlib.h: 67: extern int atoi(const char *);
[; ;stdlib.h: 68: extern unsigned xtoi(const char *);
[; ;stdlib.h: 69: extern long atol(const char *);
[; ;stdlib.h: 70: extern long strtol(const char *, char **, int);
[; ;stdlib.h: 72: extern int rand(void);
[; ;stdlib.h: 73: extern void srand(unsigned int);
[; ;stdlib.h: 74: extern void * calloc(size_t, size_t);
[; ;stdlib.h: 75: extern div_t div(int numer, int denom);
[; ;stdlib.h: 76: extern udiv_t udiv(unsigned numer, unsigned denom);
[; ;stdlib.h: 77: extern ldiv_t ldiv(long numer, long denom);
[; ;stdlib.h: 78: extern uldiv_t uldiv(unsigned long numer,unsigned long denom);
[; ;stdlib.h: 79: extern unsigned long _lrotl(unsigned long value, unsigned int shift);
[; ;stdlib.h: 80: extern unsigned long _lrotr(unsigned long value, unsigned int shift);
[; ;stdlib.h: 81: extern unsigned int _rotl(unsigned int value, unsigned int shift);
[; ;stdlib.h: 82: extern unsigned int _rotr(unsigned int value, unsigned int shift);
[; ;stdlib.h: 87: extern void * malloc(size_t);
[; ;stdlib.h: 88: extern void free(void *);
[; ;stdlib.h: 89: extern void * realloc(void *, size_t);
[; ;stdlib.h: 91: extern void abort(void);
[; ;stdlib.h: 92: extern void exit(int);
[; ;stdlib.h: 93: extern int atexit(void (*)(void));
[; ;stdlib.h: 94: extern char * getenv(const char *);
[; ;stdlib.h: 95: extern char ** environ;
[; ;stdlib.h: 96: extern int system(char *);
[; ;stdlib.h: 97: extern void qsort(void *, size_t, size_t, int (*)(const void *, const void *));
[; ;stdlib.h: 98: extern void * bsearch(const void *, void *, size_t, size_t, int(*)(const void *, const void *));
[; ;stdlib.h: 99: extern int abs(int);
[; ;stdlib.h: 100: extern long labs(long);
[; ;stdlib.h: 103: extern char * itoa(char * buf, int val, int base);
[; ;stdlib.h: 104: extern char * utoa(char * buf, unsigned val, int base);
[; ;stdlib.h: 109: extern char * ltoa(char * buf, long val, int base);
[; ;stdlib.h: 110: extern char * ultoa(char * buf, unsigned long val, int base);
[; ;stdlib.h: 112: extern char * ftoa(float f, int * status);
[; ;pic12f675.h: 47: extern volatile unsigned char INDF @ 0x000;
"49 C:\Program Files (x86)\Microchip\xc8\v1.33\include\pic12f675.h
[; ;pic12f675.h: 49: asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
[; ;pic12f675.h: 52: typedef union {
[; ;pic12f675.h: 53: struct {
[; ;pic12f675.h: 54: unsigned INDF :8;
[; ;pic12f675.h: 55: };
[; ;pic12f675.h: 56: } INDFbits_t;
[; ;pic12f675.h: 57: extern volatile INDFbits_t INDFbits @ 0x000;
[; ;pic12f675.h: 66: extern volatile unsigned char TMR0 @ 0x001;
"68
[; ;pic12f675.h: 68: asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
[; ;pic12f675.h: 71: typedef union {
[; ;pic12f675.h: 72: struct {
[; ;pic12f675.h: 73: unsigned TMR0 :8;
[; ;pic12f675.h: 74: };
[; ;pic12f675.h: 75: } TMR0bits_t;
[; ;pic12f675.h: 76: extern volatile TMR0bits_t TMR0bits @ 0x001;
[; ;pic12f675.h: 85: extern volatile unsigned char PCL @ 0x002;
"87
[; ;pic12f675.h: 87: asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
[; ;pic12f675.h: 90: typedef union {
[; ;pic12f675.h: 91: struct {
[; ;pic12f675.h: 92: unsigned PCL :8;
[; ;pic12f675.h: 93: };
[; ;pic12f675.h: 94: } PCLbits_t;
[; ;pic12f675.h: 95: extern volatile PCLbits_t PCLbits @ 0x002;
[; ;pic12f675.h: 104: extern volatile unsigned char STATUS @ 0x003;
"106
[; ;pic12f675.h: 106: asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
[; ;pic12f675.h: 109: typedef union {
[; ;pic12f675.h: 110: struct {
[; ;pic12f675.h: 111: unsigned C :1;
[; ;pic12f675.h: 112: unsigned DC :1;
[; ;pic12f675.h: 113: unsigned Z :1;
[; ;pic12f675.h: 114: unsigned nPD :1;
[; ;pic12f675.h: 115: unsigned nTO :1;
[; ;pic12f675.h: 116: unsigned RP :2;
[; ;pic12f675.h: 117: unsigned IRP :1;
[; ;pic12f675.h: 118: };
[; ;pic12f675.h: 119: struct {
[; ;pic12f675.h: 120: unsigned :5;
[; ;pic12f675.h: 121: unsigned RP0 :1;
[; ;pic12f675.h: 122: unsigned RP1 :1;
[; ;pic12f675.h: 123: };
[; ;pic12f675.h: 124: struct {
[; ;pic12f675.h: 125: unsigned CARRY :1;
[; ;pic12f675.h: 126: };
[; ;pic12f675.h: 127: struct {
[; ;pic12f675.h: 128: unsigned :2;
[; ;pic12f675.h: 129: unsigned ZERO :1;
[; ;pic12f675.h: 130: };
[; ;pic12f675.h: 131: } STATUSbits_t;
[; ;pic12f675.h: 132: extern volatile STATUSbits_t STATUSbits @ 0x003;
[; ;pic12f675.h: 191: extern volatile unsigned char FSR @ 0x004;
"193
[; ;pic12f675.h: 193: asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
[; ;pic12f675.h: 196: typedef union {
[; ;pic12f675.h: 197: struct {
[; ;pic12f675.h: 198: unsigned FSR :8;
[; ;pic12f675.h: 199: };
[; ;pic12f675.h: 200: } FSRbits_t;
[; ;pic12f675.h: 201: extern volatile FSRbits_t FSRbits @ 0x004;
[; ;pic12f675.h: 210: extern volatile unsigned char GPIO @ 0x005;
"212
[; ;pic12f675.h: 212: asm("GPIO equ 05h");
[; <" GPIO equ 05h ;# ">
[; ;pic12f675.h: 215: typedef union {
[; ;pic12f675.h: 216: struct {
[; ;pic12f675.h: 217: unsigned GP0 :1;
[; ;pic12f675.h: 218: unsigned GP1 :1;
[; ;pic12f675.h: 219: unsigned GP2 :1;
[; ;pic12f675.h: 220: unsigned GP3 :1;
[; ;pic12f675.h: 221: unsigned GP4 :1;
[; ;pic12f675.h: 222: unsigned GP5 :1;
[; ;pic12f675.h: 223: };
[; ;pic12f675.h: 224: struct {
[; ;pic12f675.h: 225: unsigned GPIO0 :1;
[; ;pic12f675.h: 226: unsigned GPIO1 :1;
[; ;pic12f675.h: 227: unsigned GPIO2 :1;
[; ;pic12f675.h: 228: unsigned GPIO3 :1;
[; ;pic12f675.h: 229: unsigned GPIO4 :1;
[; ;pic12f675.h: 230: unsigned GPIO5 :1;
[; ;pic12f675.h: 231: };
[; ;pic12f675.h: 232: } GPIObits_t;
[; ;pic12f675.h: 233: extern volatile GPIObits_t GPIObits @ 0x005;
[; ;pic12f675.h: 297: extern volatile unsigned char PCLATH @ 0x00A;
"299
[; ;pic12f675.h: 299: asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
[; ;pic12f675.h: 302: typedef union {
[; ;pic12f675.h: 303: struct {
[; ;pic12f675.h: 304: unsigned PCLATH :5;
[; ;pic12f675.h: 305: };
[; ;pic12f675.h: 306: } PCLATHbits_t;
[; ;pic12f675.h: 307: extern volatile PCLATHbits_t PCLATHbits @ 0x00A;
[; ;pic12f675.h: 316: extern volatile unsigned char INTCON @ 0x00B;
"318
[; ;pic12f675.h: 318: asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
[; ;pic12f675.h: 321: typedef union {
[; ;pic12f675.h: 322: struct {
[; ;pic12f675.h: 323: unsigned GPIF :1;
[; ;pic12f675.h: 324: unsigned INTF :1;
[; ;pic12f675.h: 325: unsigned T0IF :1;
[; ;pic12f675.h: 326: unsigned GPIE :1;
[; ;pic12f675.h: 327: unsigned INTE :1;
[; ;pic12f675.h: 328: unsigned T0IE :1;
[; ;pic12f675.h: 329: unsigned PEIE :1;
[; ;pic12f675.h: 330: unsigned GIE :1;
[; ;pic12f675.h: 331: };
[; ;pic12f675.h: 332: struct {
[; ;pic12f675.h: 333: unsigned :2;
[; ;pic12f675.h: 334: unsigned TMR0IF :1;
[; ;pic12f675.h: 335: unsigned :2;
[; ;pic12f675.h: 336: unsigned TMR0IE :1;
[; ;pic12f675.h: 337: };
[; ;pic12f675.h: 338: } INTCONbits_t;
[; ;pic12f675.h: 339: extern volatile INTCONbits_t INTCONbits @ 0x00B;
[; ;pic12f675.h: 393: extern volatile unsigned char PIR1 @ 0x00C;
"395
[; ;pic12f675.h: 395: asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
[; ;pic12f675.h: 398: typedef union {
[; ;pic12f675.h: 399: struct {
[; ;pic12f675.h: 400: unsigned TMR1IF :1;
[; ;pic12f675.h: 401: unsigned :2;
[; ;pic12f675.h: 402: unsigned CMIF :1;
[; ;pic12f675.h: 403: unsigned :2;
[; ;pic12f675.h: 404: unsigned ADIF :1;
[; ;pic12f675.h: 405: unsigned EEIF :1;
[; ;pic12f675.h: 406: };
[; ;pic12f675.h: 407: struct {
[; ;pic12f675.h: 408: unsigned T1IF :1;
[; ;pic12f675.h: 409: };
[; ;pic12f675.h: 410: } PIR1bits_t;
[; ;pic12f675.h: 411: extern volatile PIR1bits_t PIR1bits @ 0x00C;
[; ;pic12f675.h: 440: extern volatile unsigned short TMR1 @ 0x00E;
"442
[; ;pic12f675.h: 442: asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
[; ;pic12f675.h: 446: extern volatile unsigned char TMR1L @ 0x00E;
"448
[; ;pic12f675.h: 448: asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
[; ;pic12f675.h: 451: typedef union {
[; ;pic12f675.h: 452: struct {
[; ;pic12f675.h: 453: unsigned TMR1L :8;
[; ;pic12f675.h: 454: };
[; ;pic12f675.h: 455: } TMR1Lbits_t;
[; ;pic12f675.h: 456: extern volatile TMR1Lbits_t TMR1Lbits @ 0x00E;
[; ;pic12f675.h: 465: extern volatile unsigned char TMR1H @ 0x00F;
"467
[; ;pic12f675.h: 467: asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
[; ;pic12f675.h: 470: typedef union {
[; ;pic12f675.h: 471: struct {
[; ;pic12f675.h: 472: unsigned TMR1H :8;
[; ;pic12f675.h: 473: };
[; ;pic12f675.h: 474: } TMR1Hbits_t;
[; ;pic12f675.h: 475: extern volatile TMR1Hbits_t TMR1Hbits @ 0x00F;
[; ;pic12f675.h: 484: extern volatile unsigned char T1CON @ 0x010;
"486
[; ;pic12f675.h: 486: asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
[; ;pic12f675.h: 489: typedef union {
[; ;pic12f675.h: 490: struct {
[; ;pic12f675.h: 491: unsigned TMR1ON :1;
[; ;pic12f675.h: 492: unsigned TMR1CS :1;
[; ;pic12f675.h: 493: unsigned nT1SYNC :1;
[; ;pic12f675.h: 494: unsigned T1OSCEN :1;
[; ;pic12f675.h: 495: unsigned T1CKPS :2;
[; ;pic12f675.h: 496: unsigned TMR1GE :1;
[; ;pic12f675.h: 497: };
[; ;pic12f675.h: 498: struct {
[; ;pic12f675.h: 499: unsigned :4;
[; ;pic12f675.h: 500: unsigned T1CKPS0 :1;
[; ;pic12f675.h: 501: unsigned T1CKPS1 :1;
[; ;pic12f675.h: 502: };
[; ;pic12f675.h: 503: } T1CONbits_t;
[; ;pic12f675.h: 504: extern volatile T1CONbits_t T1CONbits @ 0x010;
[; ;pic12f675.h: 548: extern volatile unsigned char CMCON @ 0x019;
"550
[; ;pic12f675.h: 550: asm("CMCON equ 019h");
[; <" CMCON equ 019h ;# ">
[; ;pic12f675.h: 553: typedef union {
[; ;pic12f675.h: 554: struct {
[; ;pic12f675.h: 555: unsigned CM :3;
[; ;pic12f675.h: 556: unsigned CIS :1;
[; ;pic12f675.h: 557: unsigned CINV :1;
[; ;pic12f675.h: 558: unsigned :1;
[; ;pic12f675.h: 559: unsigned COUT :1;
[; ;pic12f675.h: 560: };
[; ;pic12f675.h: 561: struct {
[; ;pic12f675.h: 562: unsigned CM0 :1;
[; ;pic12f675.h: 563: unsigned CM1 :1;
[; ;pic12f675.h: 564: unsigned CM2 :1;
[; ;pic12f675.h: 565: };
[; ;pic12f675.h: 566: } CMCONbits_t;
[; ;pic12f675.h: 567: extern volatile CMCONbits_t CMCONbits @ 0x019;
[; ;pic12f675.h: 606: extern volatile unsigned char ADRESH @ 0x01E;
"608
[; ;pic12f675.h: 608: asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
[; ;pic12f675.h: 611: typedef union {
[; ;pic12f675.h: 612: struct {
[; ;pic12f675.h: 613: unsigned ADRESH :8;
[; ;pic12f675.h: 614: };
[; ;pic12f675.h: 615: } ADRESHbits_t;
[; ;pic12f675.h: 616: extern volatile ADRESHbits_t ADRESHbits @ 0x01E;
[; ;pic12f675.h: 625: extern volatile unsigned char ADCON0 @ 0x01F;
"627
[; ;pic12f675.h: 627: asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
[; ;pic12f675.h: 630: typedef union {
[; ;pic12f675.h: 631: struct {
[; ;pic12f675.h: 632: unsigned ADON :1;
[; ;pic12f675.h: 633: unsigned GO_nDONE :1;
[; ;pic12f675.h: 634: unsigned CHS :2;
[; ;pic12f675.h: 635: unsigned :2;
[; ;pic12f675.h: 636: unsigned VCFG :1;
[; ;pic12f675.h: 637: unsigned ADFM :1;
[; ;pic12f675.h: 638: };
[; ;pic12f675.h: 639: struct {
[; ;pic12f675.h: 640: unsigned :1;
[; ;pic12f675.h: 641: unsigned GO_DONE :1;
[; ;pic12f675.h: 642: unsigned CHS0 :1;
[; ;pic12f675.h: 643: unsigned CHS1 :1;
[; ;pic12f675.h: 644: };
[; ;pic12f675.h: 645: struct {
[; ;pic12f675.h: 646: unsigned :1;
[; ;pic12f675.h: 647: unsigned nDONE :1;
[; ;pic12f675.h: 648: };
[; ;pic12f675.h: 649: struct {
[; ;pic12f675.h: 650: unsigned :1;
[; ;pic12f675.h: 651: unsigned GO :1;
[; ;pic12f675.h: 652: };
[; ;pic12f675.h: 653: } ADCON0bits_t;
[; ;pic12f675.h: 654: extern volatile ADCON0bits_t ADCON0bits @ 0x01F;
[; ;pic12f675.h: 708: extern volatile unsigned char OPTION_REG @ 0x081;
"710
[; ;pic12f675.h: 710: asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
[; ;pic12f675.h: 713: typedef union {
[; ;pic12f675.h: 714: struct {
[; ;pic12f675.h: 715: unsigned PS :3;
[; ;pic12f675.h: 716: unsigned PSA :1;
[; ;pic12f675.h: 717: unsigned T0SE :1;
[; ;pic12f675.h: 718: unsigned T0CS :1;
[; ;pic12f675.h: 719: unsigned INTEDG :1;
[; ;pic12f675.h: 720: unsigned nGPPU :1;
[; ;pic12f675.h: 721: };
[; ;pic12f675.h: 722: struct {
[; ;pic12f675.h: 723: unsigned PS0 :1;
[; ;pic12f675.h: 724: unsigned PS1 :1;
[; ;pic12f675.h: 725: unsigned PS2 :1;
[; ;pic12f675.h: 726: };
[; ;pic12f675.h: 727: } OPTION_REGbits_t;
[; ;pic12f675.h: 728: extern volatile OPTION_REGbits_t OPTION_REGbits @ 0x081;
[; ;pic12f675.h: 777: extern volatile unsigned char TRISIO @ 0x085;
"779
[; ;pic12f675.h: 779: asm("TRISIO equ 085h");
[; <" TRISIO equ 085h ;# ">
[; ;pic12f675.h: 782: typedef union {
[; ;pic12f675.h: 783: struct {
[; ;pic12f675.h: 784: unsigned TRISIO0 :1;
[; ;pic12f675.h: 785: unsigned TRISIO1 :1;
[; ;pic12f675.h: 786: unsigned TRISIO2 :1;
[; ;pic12f675.h: 787: unsigned TRISIO3 :1;
[; ;pic12f675.h: 788: unsigned TRISIO4 :1;
[; ;pic12f675.h: 789: unsigned TRISIO5 :1;
[; ;pic12f675.h: 790: };
[; ;pic12f675.h: 791: } TRISIObits_t;
[; ;pic12f675.h: 792: extern volatile TRISIObits_t TRISIObits @ 0x085;
[; ;pic12f675.h: 826: extern volatile unsigned char PIE1 @ 0x08C;
"828
[; ;pic12f675.h: 828: asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
[; ;pic12f675.h: 831: typedef union {
[; ;pic12f675.h: 832: struct {
[; ;pic12f675.h: 833: unsigned TMR1IE :1;
[; ;pic12f675.h: 834: unsigned :2;
[; ;pic12f675.h: 835: unsigned CMIE :1;
[; ;pic12f675.h: 836: unsigned :2;
[; ;pic12f675.h: 837: unsigned ADIE :1;
[; ;pic12f675.h: 838: unsigned EEIE :1;
[; ;pic12f675.h: 839: };
[; ;pic12f675.h: 840: struct {
[; ;pic12f675.h: 841: unsigned T1IE :1;
[; ;pic12f675.h: 842: };
[; ;pic12f675.h: 843: } PIE1bits_t;
[; ;pic12f675.h: 844: extern volatile PIE1bits_t PIE1bits @ 0x08C;
[; ;pic12f675.h: 873: extern volatile unsigned char PCON @ 0x08E;
"875
[; ;pic12f675.h: 875: asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
[; ;pic12f675.h: 878: typedef union {
[; ;pic12f675.h: 879: struct {
[; ;pic12f675.h: 880: unsigned nBOR :1;
[; ;pic12f675.h: 881: unsigned nPOR :1;
[; ;pic12f675.h: 882: };
[; ;pic12f675.h: 883: struct {
[; ;pic12f675.h: 884: unsigned nBOD :1;
[; ;pic12f675.h: 885: };
[; ;pic12f675.h: 886: } PCONbits_t;
[; ;pic12f675.h: 887: extern volatile PCONbits_t PCONbits @ 0x08E;
[; ;pic12f675.h: 906: extern volatile unsigned char OSCCAL @ 0x090;
"908
[; ;pic12f675.h: 908: asm("OSCCAL equ 090h");
[; <" OSCCAL equ 090h ;# ">
[; ;pic12f675.h: 911: typedef union {
[; ;pic12f675.h: 912: struct {
[; ;pic12f675.h: 913: unsigned :2;
[; ;pic12f675.h: 914: unsigned CAL :6;
[; ;pic12f675.h: 915: };
[; ;pic12f675.h: 916: struct {
[; ;pic12f675.h: 917: unsigned :2;
[; ;pic12f675.h: 918: unsigned CAL0 :1;
[; ;pic12f675.h: 919: unsigned CAL1 :1;
[; ;pic12f675.h: 920: unsigned CAL2 :1;
[; ;pic12f675.h: 921: unsigned CAL3 :1;
[; ;pic12f675.h: 922: unsigned CAL4 :1;
[; ;pic12f675.h: 923: unsigned CAL5 :1;
[; ;pic12f675.h: 924: };
[; ;pic12f675.h: 925: } OSCCALbits_t;
[; ;pic12f675.h: 926: extern volatile OSCCALbits_t OSCCALbits @ 0x090;
[; ;pic12f675.h: 965: extern volatile unsigned char WPU @ 0x095;
"967
[; ;pic12f675.h: 967: asm("WPU equ 095h");
[; <" WPU equ 095h ;# ">
[; ;pic12f675.h: 970: typedef union {
[; ;pic12f675.h: 971: struct {
[; ;pic12f675.h: 972: unsigned WPU0 :1;
[; ;pic12f675.h: 973: unsigned WPU1 :1;
[; ;pic12f675.h: 974: unsigned WPU2 :1;
[; ;pic12f675.h: 975: unsigned :1;
[; ;pic12f675.h: 976: unsigned WPU4 :1;
[; ;pic12f675.h: 977: unsigned WPU5 :1;
[; ;pic12f675.h: 978: };
[; ;pic12f675.h: 979: } WPUbits_t;
[; ;pic12f675.h: 980: extern volatile WPUbits_t WPUbits @ 0x095;
[; ;pic12f675.h: 1009: extern volatile unsigned char IOC @ 0x096;
"1011
[; ;pic12f675.h: 1011: asm("IOC equ 096h");
[; <" IOC equ 096h ;# ">
[; ;pic12f675.h: 1014: extern volatile unsigned char IOCB @ 0x096;
"1016
[; ;pic12f675.h: 1016: asm("IOCB equ 096h");
[; <" IOCB equ 096h ;# ">
[; ;pic12f675.h: 1019: typedef union {
[; ;pic12f675.h: 1020: struct {
[; ;pic12f675.h: 1021: unsigned IOC0 :1;
[; ;pic12f675.h: 1022: unsigned IOC1 :1;
[; ;pic12f675.h: 1023: unsigned IOC2 :1;
[; ;pic12f675.h: 1024: unsigned IOC3 :1;
[; ;pic12f675.h: 1025: unsigned IOC4 :1;
[; ;pic12f675.h: 1026: unsigned IOC5 :1;
[; ;pic12f675.h: 1027: };
[; ;pic12f675.h: 1028: struct {
[; ;pic12f675.h: 1029: unsigned IOCB0 :1;
[; ;pic12f675.h: 1030: unsigned IOCB1 :1;
[; ;pic12f675.h: 1031: unsigned IOCB2 :1;
[; ;pic12f675.h: 1032: unsigned IOCB3 :1;
[; ;pic12f675.h: 1033: unsigned IOCB4 :1;
[; ;pic12f675.h: 1034: unsigned IOCB5 :1;
[; ;pic12f675.h: 1035: };
[; ;pic12f675.h: 1036: } IOCbits_t;
[; ;pic12f675.h: 1037: extern volatile IOCbits_t IOCbits @ 0x096;
[; ;pic12f675.h: 1100: typedef union {
[; ;pic12f675.h: 1101: struct {
[; ;pic12f675.h: 1102: unsigned IOC0 :1;
[; ;pic12f675.h: 1103: unsigned IOC1 :1;
[; ;pic12f675.h: 1104: unsigned IOC2 :1;
[; ;pic12f675.h: 1105: unsigned IOC3 :1;
[; ;pic12f675.h: 1106: unsigned IOC4 :1;
[; ;pic12f675.h: 1107: unsigned IOC5 :1;
[; ;pic12f675.h: 1108: };
[; ;pic12f675.h: 1109: struct {
[; ;pic12f675.h: 1110: unsigned IOCB0 :1;
[; ;pic12f675.h: 1111: unsigned IOCB1 :1;
[; ;pic12f675.h: 1112: unsigned IOCB2 :1;
[; ;pic12f675.h: 1113: unsigned IOCB3 :1;
[; ;pic12f675.h: 1114: unsigned IOCB4 :1;
[; ;pic12f675.h: 1115: unsigned IOCB5 :1;
[; ;pic12f675.h: 1116: };
[; ;pic12f675.h: 1117: } IOCBbits_t;
[; ;pic12f675.h: 1118: extern volatile IOCBbits_t IOCBbits @ 0x096;
[; ;pic12f675.h: 1182: extern volatile unsigned char VRCON @ 0x099;
"1184
[; ;pic12f675.h: 1184: asm("VRCON equ 099h");
[; <" VRCON equ 099h ;# ">
[; ;pic12f675.h: 1187: typedef union {
[; ;pic12f675.h: 1188: struct {
[; ;pic12f675.h: 1189: unsigned VR :4;
[; ;pic12f675.h: 1190: unsigned :1;
[; ;pic12f675.h: 1191: unsigned VRR :1;
[; ;pic12f675.h: 1192: unsigned :1;
[; ;pic12f675.h: 1193: unsigned VREN :1;
[; ;pic12f675.h: 1194: };
[; ;pic12f675.h: 1195: struct {
[; ;pic12f675.h: 1196: unsigned VR0 :1;
[; ;pic12f675.h: 1197: unsigned VR1 :1;
[; ;pic12f675.h: 1198: unsigned VR2 :1;
[; ;pic12f675.h: 1199: unsigned VR3 :1;
[; ;pic12f675.h: 1200: };
[; ;pic12f675.h: 1201: } VRCONbits_t;
[; ;pic12f675.h: 1202: extern volatile VRCONbits_t VRCONbits @ 0x099;
[; ;pic12f675.h: 1241: extern volatile unsigned char EEDATA @ 0x09A;
"1243
[; ;pic12f675.h: 1243: asm("EEDATA equ 09Ah");
[; <" EEDATA equ 09Ah ;# ">
[; ;pic12f675.h: 1246: extern volatile unsigned char EEDAT @ 0x09A;
"1248
[; ;pic12f675.h: 1248: asm("EEDAT equ 09Ah");
[; <" EEDAT equ 09Ah ;# ">
[; ;pic12f675.h: 1251: typedef union {
[; ;pic12f675.h: 1252: struct {
[; ;pic12f675.h: 1253: unsigned EEDATA :8;
[; ;pic12f675.h: 1254: };
[; ;pic12f675.h: 1255: } EEDATAbits_t;
[; ;pic12f675.h: 1256: extern volatile EEDATAbits_t EEDATAbits @ 0x09A;
[; ;pic12f675.h: 1264: typedef union {
[; ;pic12f675.h: 1265: struct {
[; ;pic12f675.h: 1266: unsigned EEDATA :8;
[; ;pic12f675.h: 1267: };
[; ;pic12f675.h: 1268: } EEDATbits_t;
[; ;pic12f675.h: 1269: extern volatile EEDATbits_t EEDATbits @ 0x09A;
[; ;pic12f675.h: 1278: extern volatile unsigned char EEADR @ 0x09B;
"1280
[; ;pic12f675.h: 1280: asm("EEADR equ 09Bh");
[; <" EEADR equ 09Bh ;# ">
[; ;pic12f675.h: 1283: typedef union {
[; ;pic12f675.h: 1284: struct {
[; ;pic12f675.h: 1285: unsigned EEADR :7;
[; ;pic12f675.h: 1286: };
[; ;pic12f675.h: 1287: } EEADRbits_t;
[; ;pic12f675.h: 1288: extern volatile EEADRbits_t EEADRbits @ 0x09B;
[; ;pic12f675.h: 1297: extern volatile unsigned char EECON1 @ 0x09C;
"1299
[; ;pic12f675.h: 1299: asm("EECON1 equ 09Ch");
[; <" EECON1 equ 09Ch ;# ">
[; ;pic12f675.h: 1302: typedef union {
[; ;pic12f675.h: 1303: struct {
[; ;pic12f675.h: 1304: unsigned RD :1;
[; ;pic12f675.h: 1305: unsigned WR :1;
[; ;pic12f675.h: 1306: unsigned WREN :1;
[; ;pic12f675.h: 1307: unsigned WRERR :1;
[; ;pic12f675.h: 1308: };
[; ;pic12f675.h: 1309: } EECON1bits_t;
[; ;pic12f675.h: 1310: extern volatile EECON1bits_t EECON1bits @ 0x09C;
[; ;pic12f675.h: 1334: extern volatile unsigned char EECON2 @ 0x09D;
"1336
[; ;pic12f675.h: 1336: asm("EECON2 equ 09Dh");
[; <" EECON2 equ 09Dh ;# ">
[; ;pic12f675.h: 1339: typedef union {
[; ;pic12f675.h: 1340: struct {
[; ;pic12f675.h: 1341: unsigned EECON2 :8;
[; ;pic12f675.h: 1342: };
[; ;pic12f675.h: 1343: } EECON2bits_t;
[; ;pic12f675.h: 1344: extern volatile EECON2bits_t EECON2bits @ 0x09D;
[; ;pic12f675.h: 1353: extern volatile unsigned char ADRESL @ 0x09E;
"1355
[; ;pic12f675.h: 1355: asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
[; ;pic12f675.h: 1358: typedef union {
[; ;pic12f675.h: 1359: struct {
[; ;pic12f675.h: 1360: unsigned ADRESL :8;
[; ;pic12f675.h: 1361: };
[; ;pic12f675.h: 1362: } ADRESLbits_t;
[; ;pic12f675.h: 1363: extern volatile ADRESLbits_t ADRESLbits @ 0x09E;
[; ;pic12f675.h: 1372: extern volatile unsigned char ANSEL @ 0x09F;
"1374
[; ;pic12f675.h: 1374: asm("ANSEL equ 09Fh");
[; <" ANSEL equ 09Fh ;# ">
[; ;pic12f675.h: 1377: typedef union {
[; ;pic12f675.h: 1378: struct {
[; ;pic12f675.h: 1379: unsigned ANS :4;
[; ;pic12f675.h: 1380: unsigned ADCS :3;
[; ;pic12f675.h: 1381: };
[; ;pic12f675.h: 1382: struct {
[; ;pic12f675.h: 1383: unsigned ANS0 :1;
[; ;pic12f675.h: 1384: unsigned ANS1 :1;
[; ;pic12f675.h: 1385: unsigned ANS2 :1;
[; ;pic12f675.h: 1386: unsigned ANS3 :1;
[; ;pic12f675.h: 1387: unsigned ADCS0 :1;
[; ;pic12f675.h: 1388: unsigned ADCS1 :1;
[; ;pic12f675.h: 1389: unsigned ADCS2 :1;
[; ;pic12f675.h: 1390: };
[; ;pic12f675.h: 1391: } ANSELbits_t;
[; ;pic12f675.h: 1392: extern volatile ANSELbits_t ANSELbits @ 0x09F;
[; ;pic12f675.h: 1447: extern volatile __bit ADCS0 @ (((unsigned) &ANSEL)*8) + 4;
[; ;pic12f675.h: 1449: extern volatile __bit ADCS1 @ (((unsigned) &ANSEL)*8) + 5;
[; ;pic12f675.h: 1451: extern volatile __bit ADCS2 @ (((unsigned) &ANSEL)*8) + 6;
[; ;pic12f675.h: 1453: extern volatile __bit ADFM @ (((unsigned) &ADCON0)*8) + 7;
[; ;pic12f675.h: 1455: extern volatile __bit ADIE @ (((unsigned) &PIE1)*8) + 6;
[; ;pic12f675.h: 1457: extern volatile __bit ADIF @ (((unsigned) &PIR1)*8) + 6;
[; ;pic12f675.h: 1459: extern volatile __bit ADON @ (((unsigned) &ADCON0)*8) + 0;
[; ;pic12f675.h: 1461: extern volatile __bit ANS0 @ (((unsigned) &ANSEL)*8) + 0;
[; ;pic12f675.h: 1463: extern volatile __bit ANS1 @ (((unsigned) &ANSEL)*8) + 1;
[; ;pic12f675.h: 1465: extern volatile __bit ANS2 @ (((unsigned) &ANSEL)*8) + 2;
[; ;pic12f675.h: 1467: extern volatile __bit ANS3 @ (((unsigned) &ANSEL)*8) + 3;
[; ;pic12f675.h: 1469: extern volatile __bit CAL0 @ (((unsigned) &OSCCAL)*8) + 2;
[; ;pic12f675.h: 1471: extern volatile __bit CAL1 @ (((unsigned) &OSCCAL)*8) + 3;
[; ;pic12f675.h: 1473: extern volatile __bit CAL2 @ (((unsigned) &OSCCAL)*8) + 4;
[; ;pic12f675.h: 1475: extern volatile __bit CAL3 @ (((unsigned) &OSCCAL)*8) + 5;
[; ;pic12f675.h: 1477: extern volatile __bit CAL4 @ (((unsigned) &OSCCAL)*8) + 6;
[; ;pic12f675.h: 1479: extern volatile __bit CAL5 @ (((unsigned) &OSCCAL)*8) + 7;
[; ;pic12f675.h: 1481: extern volatile __bit CARRY @ (((unsigned) &STATUS)*8) + 0;
[; ;pic12f675.h: 1483: extern volatile __bit CHS0 @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic12f675.h: 1485: extern volatile __bit CHS1 @ (((unsigned) &ADCON0)*8) + 3;
[; ;pic12f675.h: 1487: extern volatile __bit CINV @ (((unsigned) &CMCON)*8) + 4;
[; ;pic12f675.h: 1489: extern volatile __bit CIS @ (((unsigned) &CMCON)*8) + 3;
[; ;pic12f675.h: 1491: extern volatile __bit CM0 @ (((unsigned) &CMCON)*8) + 0;
[; ;pic12f675.h: 1493: extern volatile __bit CM1 @ (((unsigned) &CMCON)*8) + 1;
[; ;pic12f675.h: 1495: extern volatile __bit CM2 @ (((unsigned) &CMCON)*8) + 2;
[; ;pic12f675.h: 1497: extern volatile __bit CMIE @ (((unsigned) &PIE1)*8) + 3;
[; ;pic12f675.h: 1499: extern volatile __bit CMIF @ (((unsigned) &PIR1)*8) + 3;
[; ;pic12f675.h: 1501: extern volatile __bit COUT @ (((unsigned) &CMCON)*8) + 6;
[; ;pic12f675.h: 1503: extern volatile __bit DC @ (((unsigned) &STATUS)*8) + 1;
[; ;pic12f675.h: 1505: extern volatile __bit EEIE @ (((unsigned) &PIE1)*8) + 7;
[; ;pic12f675.h: 1507: extern volatile __bit EEIF @ (((unsigned) &PIR1)*8) + 7;
[; ;pic12f675.h: 1509: extern volatile __bit GIE @ (((unsigned) &INTCON)*8) + 7;
[; ;pic12f675.h: 1511: extern volatile __bit GO @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic12f675.h: 1513: extern volatile __bit GO_DONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic12f675.h: 1515: extern volatile __bit GO_nDONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic12f675.h: 1517: extern volatile __bit GP0 @ (((unsigned) &GPIO)*8) + 0;
[; ;pic12f675.h: 1519: extern volatile __bit GP1 @ (((unsigned) &GPIO)*8) + 1;
[; ;pic12f675.h: 1521: extern volatile __bit GP2 @ (((unsigned) &GPIO)*8) + 2;
[; ;pic12f675.h: 1523: extern volatile __bit GP3 @ (((unsigned) &GPIO)*8) + 3;
[; ;pic12f675.h: 1525: extern volatile __bit GP4 @ (((unsigned) &GPIO)*8) + 4;
[; ;pic12f675.h: 1527: extern volatile __bit GP5 @ (((unsigned) &GPIO)*8) + 5;
[; ;pic12f675.h: 1529: extern volatile __bit GPIE @ (((unsigned) &INTCON)*8) + 3;
[; ;pic12f675.h: 1531: extern volatile __bit GPIF @ (((unsigned) &INTCON)*8) + 0;
[; ;pic12f675.h: 1533: extern volatile __bit GPIO0 @ (((unsigned) &GPIO)*8) + 0;
[; ;pic12f675.h: 1535: extern volatile __bit GPIO1 @ (((unsigned) &GPIO)*8) + 1;
[; ;pic12f675.h: 1537: extern volatile __bit GPIO2 @ (((unsigned) &GPIO)*8) + 2;
[; ;pic12f675.h: 1539: extern volatile __bit GPIO3 @ (((unsigned) &GPIO)*8) + 3;
[; ;pic12f675.h: 1541: extern volatile __bit GPIO4 @ (((unsigned) &GPIO)*8) + 4;
[; ;pic12f675.h: 1543: extern volatile __bit GPIO5 @ (((unsigned) &GPIO)*8) + 5;
[; ;pic12f675.h: 1545: extern volatile __bit INTE @ (((unsigned) &INTCON)*8) + 4;
[; ;pic12f675.h: 1547: extern volatile __bit INTEDG @ (((unsigned) &OPTION_REG)*8) + 6;
[; ;pic12f675.h: 1549: extern volatile __bit INTF @ (((unsigned) &INTCON)*8) + 1;
[; ;pic12f675.h: 1551: extern volatile __bit IOC0 @ (((unsigned) &IOC)*8) + 0;
[; ;pic12f675.h: 1553: extern volatile __bit IOC1 @ (((unsigned) &IOC)*8) + 1;
[; ;pic12f675.h: 1555: extern volatile __bit IOC2 @ (((unsigned) &IOC)*8) + 2;
[; ;pic12f675.h: 1557: extern volatile __bit IOC3 @ (((unsigned) &IOC)*8) + 3;
[; ;pic12f675.h: 1559: extern volatile __bit IOC4 @ (((unsigned) &IOC)*8) + 4;
[; ;pic12f675.h: 1561: extern volatile __bit IOC5 @ (((unsigned) &IOC)*8) + 5;
[; ;pic12f675.h: 1563: extern volatile __bit IOCB0 @ (((unsigned) &IOC)*8) + 0;
[; ;pic12f675.h: 1565: extern volatile __bit IOCB1 @ (((unsigned) &IOC)*8) + 1;
[; ;pic12f675.h: 1567: extern volatile __bit IOCB2 @ (((unsigned) &IOC)*8) + 2;
[; ;pic12f675.h: 1569: extern volatile __bit IOCB3 @ (((unsigned) &IOC)*8) + 3;
[; ;pic12f675.h: 1571: extern volatile __bit IOCB4 @ (((unsigned) &IOC)*8) + 4;
[; ;pic12f675.h: 1573: extern volatile __bit IOCB5 @ (((unsigned) &IOC)*8) + 5;
[; ;pic12f675.h: 1575: extern volatile __bit IRP @ (((unsigned) &STATUS)*8) + 7;
[; ;pic12f675.h: 1577: extern volatile __bit PEIE @ (((unsigned) &INTCON)*8) + 6;
[; ;pic12f675.h: 1579: extern volatile __bit PS0 @ (((unsigned) &OPTION_REG)*8) + 0;
[; ;pic12f675.h: 1581: extern volatile __bit PS1 @ (((unsigned) &OPTION_REG)*8) + 1;
[; ;pic12f675.h: 1583: extern volatile __bit PS2 @ (((unsigned) &OPTION_REG)*8) + 2;
[; ;pic12f675.h: 1585: extern volatile __bit PSA @ (((unsigned) &OPTION_REG)*8) + 3;
[; ;pic12f675.h: 1587: extern volatile __bit RD @ (((unsigned) &EECON1)*8) + 0;
[; ;pic12f675.h: 1589: extern volatile __bit RP0 @ (((unsigned) &STATUS)*8) + 5;
[; ;pic12f675.h: 1591: extern volatile __bit RP1 @ (((unsigned) &STATUS)*8) + 6;
[; ;pic12f675.h: 1593: extern volatile __bit T0CS @ (((unsigned) &OPTION_REG)*8) + 5;
[; ;pic12f675.h: 1595: extern volatile __bit T0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic12f675.h: 1597: extern volatile __bit T0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic12f675.h: 1599: extern volatile __bit T0SE @ (((unsigned) &OPTION_REG)*8) + 4;
[; ;pic12f675.h: 1601: extern volatile __bit T1CKPS0 @ (((unsigned) &T1CON)*8) + 4;
[; ;pic12f675.h: 1603: extern volatile __bit T1CKPS1 @ (((unsigned) &T1CON)*8) + 5;
[; ;pic12f675.h: 1605: extern volatile __bit T1IE @ (((unsigned) &PIE1)*8) + 0;
[; ;pic12f675.h: 1607: extern volatile __bit T1IF @ (((unsigned) &PIR1)*8) + 0;
[; ;pic12f675.h: 1609: extern volatile __bit T1OSCEN @ (((unsigned) &T1CON)*8) + 3;
[; ;pic12f675.h: 1611: extern volatile __bit TMR0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic12f675.h: 1613: extern volatile __bit TMR0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic12f675.h: 1615: extern volatile __bit TMR1CS @ (((unsigned) &T1CON)*8) + 1;
[; ;pic12f675.h: 1617: extern volatile __bit TMR1GE @ (((unsigned) &T1CON)*8) + 6;
[; ;pic12f675.h: 1619: extern volatile __bit TMR1IE @ (((unsigned) &PIE1)*8) + 0;
[; ;pic12f675.h: 1621: extern volatile __bit TMR1IF @ (((unsigned) &PIR1)*8) + 0;
[; ;pic12f675.h: 1623: extern volatile __bit TMR1ON @ (((unsigned) &T1CON)*8) + 0;
[; ;pic12f675.h: 1625: extern volatile __bit TRISIO0 @ (((unsigned) &TRISIO)*8) + 0;
[; ;pic12f675.h: 1627: extern volatile __bit TRISIO1 @ (((unsigned) &TRISIO)*8) + 1;
[; ;pic12f675.h: 1629: extern volatile __bit TRISIO2 @ (((unsigned) &TRISIO)*8) + 2;
[; ;pic12f675.h: 1631: extern volatile __bit TRISIO3 @ (((unsigned) &TRISIO)*8) + 3;
[; ;pic12f675.h: 1633: extern volatile __bit TRISIO4 @ (((unsigned) &TRISIO)*8) + 4;
[; ;pic12f675.h: 1635: extern volatile __bit TRISIO5 @ (((unsigned) &TRISIO)*8) + 5;
[; ;pic12f675.h: 1637: extern volatile __bit VCFG @ (((unsigned) &ADCON0)*8) + 6;
[; ;pic12f675.h: 1639: extern volatile __bit VR0 @ (((unsigned) &VRCON)*8) + 0;
[; ;pic12f675.h: 1641: extern volatile __bit VR1 @ (((unsigned) &VRCON)*8) + 1;
[; ;pic12f675.h: 1643: extern volatile __bit VR2 @ (((unsigned) &VRCON)*8) + 2;
[; ;pic12f675.h: 1645: extern volatile __bit VR3 @ (((unsigned) &VRCON)*8) + 3;
[; ;pic12f675.h: 1647: extern volatile __bit VREN @ (((unsigned) &VRCON)*8) + 7;
[; ;pic12f675.h: 1649: extern volatile __bit VRR @ (((unsigned) &VRCON)*8) + 5;
[; ;pic12f675.h: 1651: extern volatile __bit WPU0 @ (((unsigned) &WPU)*8) + 0;
[; ;pic12f675.h: 1653: extern volatile __bit WPU1 @ (((unsigned) &WPU)*8) + 1;
[; ;pic12f675.h: 1655: extern volatile __bit WPU2 @ (((unsigned) &WPU)*8) + 2;
[; ;pic12f675.h: 1657: extern volatile __bit WPU4 @ (((unsigned) &WPU)*8) + 4;
[; ;pic12f675.h: 1659: extern volatile __bit WPU5 @ (((unsigned) &WPU)*8) + 5;
[; ;pic12f675.h: 1661: extern volatile __bit WR @ (((unsigned) &EECON1)*8) + 1;
[; ;pic12f675.h: 1663: extern volatile __bit WREN @ (((unsigned) &EECON1)*8) + 2;
[; ;pic12f675.h: 1665: extern volatile __bit WRERR @ (((unsigned) &EECON1)*8) + 3;
[; ;pic12f675.h: 1667: extern volatile __bit ZERO @ (((unsigned) &STATUS)*8) + 2;
[; ;pic12f675.h: 1669: extern volatile __bit nBOD @ (((unsigned) &PCON)*8) + 0;
[; ;pic12f675.h: 1671: extern volatile __bit nBOR @ (((unsigned) &PCON)*8) + 0;
[; ;pic12f675.h: 1673: extern volatile __bit nDONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic12f675.h: 1675: extern volatile __bit nGPPU @ (((unsigned) &OPTION_REG)*8) + 7;
[; ;pic12f675.h: 1677: extern volatile __bit nPD @ (((unsigned) &STATUS)*8) + 3;
[; ;pic12f675.h: 1679: extern volatile __bit nPOR @ (((unsigned) &PCON)*8) + 1;
[; ;pic12f675.h: 1681: extern volatile __bit nT1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic12f675.h: 1683: extern volatile __bit nTO @ (((unsigned) &STATUS)*8) + 4;
[; ;htc.h: 21: extern const char __xc8_OPTIM_SPEED;
[; ;htc.h: 24: extern void __builtin_software_breakpoint(void);
[; ;pic.h: 9: extern unsigned char __osccal_val(void);
[; ;pic.h: 28: extern void __nop(void);
[; ;pic.h: 80: extern unsigned int flash_read(unsigned short addr);
[; ;pic.h: 144: extern void flash_erase(unsigned short addr);
[; ;eeprom_routines.h: 41: extern void eeprom_write(unsigned char addr, unsigned char value);
[; ;eeprom_routines.h: 42: extern unsigned char eeprom_read(unsigned char addr);
[; ;eeprom_routines.h: 43: extern void eecpymem(volatile unsigned char *to, __eeprom unsigned char *from, unsigned char size);
[; ;eeprom_routines.h: 44: extern void memcpyee(__eeprom unsigned char *to, const unsigned char *from, unsigned char size);
[; ;pic.h: 154: extern __nonreentrant void _delay(unsigned long);
"28 main.c
[p x FOSC=INTRCIO ]
"29
[p x WDTE=OFF ]
"30
[p x PWRTE=OFF ]
"31
[p x MCLRE=OFF ]
"32
[p x BOREN=ON ]
"33
[p x CP=OFF ]
"34
[p x CPD=OFF ]
[; ;main.c: 49: unsigned char eeprom_read(unsigned char addr);
[; ;main.c: 50: void eeprom_write(unsigned char addr, unsigned char value);
[; ;main.c: 51: void button_action();
"52
[v _start_flag `uc ~T0 @X0 1 e ]
[v _btn_counter `uc ~T0 @X0 1 e ]
[v _btn_flag `uc ~T0 @X0 1 e ]
[v _btn_release `uc ~T0 @X0 1 e ]
[; ;main.c: 52: unsigned char start_flag,btn_counter,btn_flag,btn_release;
"53
[v _adc_counter `uc ~T0 @X0 1 e ]
[v _adc_flag `uc ~T0 @X0 1 e ]
[; ;main.c: 53: unsigned char adc_counter,adc_flag;
"54
[v _reg_on_flag `uc ~T0 @X0 1 e ]
[; ;main.c: 54: unsigned char reg_on_flag;
"55
[v _delta `Cuc ~T0 @X0 1 e ]
[i _delta
-> -> 8 `i `uc
]
[; ;main.c: 55: unsigned char const delta=8;
"56
[v _delta_reg `Cuc ~T0 @X0 1 e ]
[i _delta_reg
-> -> 3 `i `uc
]
[; ;main.c: 56: unsigned char const delta_reg=3;
"57
[v _led_flash `uc ~T0 @X0 1 e ]
[i _led_flash
-> -> 0 `i `uc
]
[v _led_flash_set `uc ~T0 @X0 1 e ]
[i _led_flash_set
-> -> 0 `i `uc
]
[; ;main.c: 57: unsigned char led_flash=0, led_flash_set=0;
"58
[v _milisec `ui ~T0 @X0 1 e ]
[i _milisec
-> -> 0 `i `ui
]
[v _main_counter `ui ~T0 @X0 1 e ]
[i _main_counter
-> -> 0 `i `ui
]
[; ;main.c: 58: unsigned int milisec=0, main_counter=0;
"59
[v _measure_counter `uc ~T0 @X0 1 e ]
[i _measure_counter
-> -> 0 `i `uc
]
[; ;main.c: 59: unsigned char measure_counter=0;
"60
[v _measure `ui ~T0 @X0 1 e ]
[v _volt `ui ~T0 @X0 1 e ]
[v _volt_average `ui ~T0 @X0 1 e ]
[v _volt_set `ui ~T0 @X0 1 e ]
[; ;main.c: 60: unsigned int measure,volt, volt_average, volt_set;
"61
[v _volt_abs `ui ~T0 @X0 1 e ]
[i _volt_abs
-> -> 490 `i `ui
]
[; ;main.c: 61: unsigned int volt_abs=490;
"62
[v _flash_delay `Cuc ~T0 @X0 1 e ]
[i _flash_delay
-> -> 200 `i `uc
]
[; ;main.c: 62: unsigned char const flash_delay=200;
"63
[v _no_flash_delay `Cui ~T0 @X0 1 e ]
[i _no_flash_delay
-> -> 800 `i `ui
]
[; ;main.c: 63: unsigned int const no_flash_delay=800;
"64
[v _flash_stop `Cui ~T0 @X0 1 e ]
[i _flash_stop
-> -> 3000 `i `ui
]
[; ;main.c: 64: unsigned int const flash_stop=3000;
"65
[v _main_cycle `Cui ~T0 @X0 1 e ]
[i _main_cycle
-> -> 200 `i `ui
]
[; ;main.c: 65: unsigned int const main_cycle=200;
"69
[v _main `(i ~T0 @X0 1 ef ]
{
[; ;main.c: 69: int main() {
[e :U _main ]
[f ]
[; ;main.c: 70: TRISIO=0b00001001;
"70
[e = _TRISIO -> -> 9 `i `uc ]
[; ;main.c: 71: GPIO=0;
"71
[e = _GPIO -> -> 0 `i `uc ]
[; ;main.c: 72: INTCON=0b11100000;
"72
[e = _INTCON -> -> 224 `i `uc ]
[; ;main.c: 73: PIE1=0b01000000;
"73
[e = _PIE1 -> -> 64 `i `uc ]
[; ;main.c: 74: OPTION_REG=0b00000000;
"74
[e = _OPTION_REG -> -> 0 `i `uc ]
[; ;main.c: 75: ADCON0=0b10000001;
"75
[e = _ADCON0 -> -> 129 `i `uc ]
[; ;main.c: 76: ANSEL=0b01000001;
"76
[e = _ANSEL -> -> 65 `i `uc ]
[; ;main.c: 77: CMCON=0b00000111;
"77
[e = _CMCON -> -> 7 `i `uc ]
[; ;main.c: 78: led_flash_set=eeprom_read(0x00);
"78
[e = _led_flash_set ( _eeprom_read (1 -> -> 0 `i `uc ]
[; ;main.c: 79: if(led_flash_set>11){
"79
[e $ ! > -> _led_flash_set `i -> 11 `i 88  ]
{
[; ;main.c: 80: led_flash_set=4;
"80
[e = _led_flash_set -> -> 4 `i `uc ]
[; ;main.c: 81: button_action();
"81
[e ( _button_action ..  ]
"82
}
[e :U 88 ]
[; ;main.c: 82: }
[; ;main.c: 83: volt_set=420+led_flash_set*2*2;
"83
[e = _volt_set -> + -> 420 `i * * -> _led_flash_set `i -> 2 `i -> 2 `i `ui ]
[; ;main.c: 84: start_flag=1;
"84
[e = _start_flag -> -> 1 `i `uc ]
[; ;main.c: 86: while(1){
"86
[e :U 90 ]
{
[; ;main.c: 87: if(led_flash_set>11){
"87
[e $ ! > -> _led_flash_set `i -> 11 `i 92  ]
{
[; ;main.c: 88: led_flash_set=4;
"88
[e = _led_flash_set -> -> 4 `i `uc ]
[; ;main.c: 89: button_action();
"89
[e ( _button_action ..  ]
"90
}
[e :U 92 ]
[; ;main.c: 90: }
[; ;main.c: 92: if(btn_flag){
"92
[e $ ! != -> _btn_flag `i -> -> -> 0 `i `uc `i 93  ]
{
[; ;main.c: 93: button_action();
"93
[e ( _button_action ..  ]
[; ;main.c: 94: GP2=0;
"94
[e = _GP2 -> -> 0 `i `b ]
[; ;main.c: 95: led_flash=led_flash_set;
"95
[e = _led_flash _led_flash_set ]
[; ;main.c: 96: milisec=flash_stop-20;
"96
[e = _milisec - _flash_stop -> -> 20 `i `ui ]
[; ;main.c: 97: volt_set=420+led_flash_set*2*2;
"97
[e = _volt_set -> + -> 420 `i * * -> _led_flash_set `i -> 2 `i -> 2 `i `ui ]
"98
}
[e :U 93 ]
[; ;main.c: 98: }
[; ;main.c: 100: if((volt_average!=0)&&(volt_average<(volt_abs-delta))&&start_flag==0){
"100
[e $ ! && && != _volt_average -> -> 0 `i `ui < _volt_average - _volt_abs -> _delta `ui == -> _start_flag `i -> 0 `i 94  ]
{
[; ;main.c: 101: GP1=1;
"101
[e = _GP1 -> -> 1 `i `b ]
"102
}
[e :U 94 ]
[; ;main.c: 102: }
[; ;main.c: 103: if(volt_average>=volt_abs){
"103
[e $ ! >= _volt_average _volt_abs 95  ]
{
[; ;main.c: 104: GP1=0;
"104
[e = _GP1 -> -> 0 `i `b ]
"105
}
[e :U 95 ]
[; ;main.c: 105: }
[; ;main.c: 106: if(main_counter>3000){
"106
[e $ ! > _main_counter -> -> 3000 `i `ui 96  ]
{
[; ;main.c: 107: start_flag=0;
"107
[e = _start_flag -> -> 0 `i `uc ]
"108
}
[e :U 96 ]
[; ;main.c: 108: }
[; ;main.c: 110: if(main_counter>main_cycle){
"110
[e $ ! > _main_counter _main_cycle 97  ]
{
[; ;main.c: 111: if(start_flag==0){
"111
[e $ ! == -> _start_flag `i -> 0 `i 98  ]
{
[; ;main.c: 112: TRISIO=0b00001001;
"112
[e = _TRISIO -> -> 9 `i `uc ]
[; ;main.c: 113: main_counter=0;
"113
[e = _main_counter -> -> 0 `i `ui ]
"114
}
[e :U 98 ]
[; ;main.c: 114: }
[; ;main.c: 115: if(volt_average>(volt_set+delta)){
"115
[e $ ! > _volt_average + _volt_set -> _delta `ui 99  ]
{
[; ;main.c: 116: reg_on_flag=1;
"116
[e = _reg_on_flag -> -> 1 `i `uc ]
"117
}
[e :U 99 ]
[; ;main.c: 117: }
[; ;main.c: 118: if(volt_average<(volt_set-delta)){
"118
[e $ ! < _volt_average - _volt_set -> _delta `ui 100  ]
{
[; ;main.c: 119: reg_on_flag=1;
"119
[e = _reg_on_flag -> -> 1 `i `uc ]
"120
}
[e :U 100 ]
"121
}
[e :U 97 ]
[; ;main.c: 120: }
[; ;main.c: 121: }
[; ;main.c: 123: if(reg_on_flag){
"123
[e $ ! != -> _reg_on_flag `i -> -> -> 0 `i `uc `i 101  ]
{
[; ;main.c: 125: if(volt_average>volt_set){
"125
[e $ ! > _volt_average _volt_set 102  ]
{
[; ;main.c: 126: GP4=1;
"126
[e = _GP4 -> -> 1 `i `b ]
[; ;main.c: 127: GP5=0;
"127
[e = _GP5 -> -> 0 `i `b ]
"129
}
[e :U 102 ]
[; ;main.c: 129: }
[; ;main.c: 130: if(volt_average<volt_set){
"130
[e $ ! < _volt_average _volt_set 103  ]
{
[; ;main.c: 131: GP5=1;
"131
[e = _GP5 -> -> 1 `i `b ]
[; ;main.c: 132: GP4=0;
"132
[e = _GP4 -> -> 0 `i `b ]
"134
}
[e :U 103 ]
[; ;main.c: 134: }
[; ;main.c: 136: if((volt_average>(volt_set-delta_reg))&&(volt_average<(volt_set+delta_reg))){
"136
[e $ ! && > _volt_average - _volt_set -> _delta_reg `ui < _volt_average + _volt_set -> _delta_reg `ui 104  ]
{
[; ;main.c: 137: GP5=0;
"137
[e = _GP5 -> -> 0 `i `b ]
[; ;main.c: 138: GP4=0;
"138
[e = _GP4 -> -> 0 `i `b ]
[; ;main.c: 139: reg_on_flag=0;
"139
[e = _reg_on_flag -> -> 0 `i `uc ]
"142
}
[e :U 104 ]
"145
}
[e :U 101 ]
[; ;main.c: 142: }
[; ;main.c: 145: }
[; ;main.c: 148: if(adc_flag){
"148
[e $ ! != -> _adc_flag `i -> -> -> 0 `i `uc `i 105  ]
{
[; ;main.c: 149: measure=(ADRESH*256)+ADRESL;
"149
[e = _measure -> + * -> _ADRESH `i -> 256 `i -> _ADRESL `i `ui ]
[; ;main.c: 150: adc_flag=0;
"150
[e = _adc_flag -> -> 0 `i `uc ]
[; ;main.c: 151: if(measure_counter<10){
"151
[e $ ! < -> _measure_counter `i -> 10 `i 106  ]
{
[; ;main.c: 152: volt=volt+measure;
"152
[e = _volt + _volt _measure ]
[; ;main.c: 153: measure_counter++;
"153
[e ++ _measure_counter -> -> 1 `i `uc ]
"154
}
[; ;main.c: 154: }
[e $U 107  ]
"155
[e :U 106 ]
[; ;main.c: 155: else{
{
[; ;main.c: 156: volt_average=volt/10;
"156
[e = _volt_average / _volt -> -> 10 `i `ui ]
[; ;main.c: 157: volt=0;
"157
[e = _volt -> -> 0 `i `ui ]
[; ;main.c: 158: measure_counter=0;
"158
[e = _measure_counter -> -> 0 `i `uc ]
"159
}
[e :U 107 ]
"160
}
[e :U 105 ]
[; ;main.c: 159: }
[; ;main.c: 160: }
[; ;main.c: 161: if(adc_counter>2&&GO_nDONE==0){
"161
[e $ ! && > -> _adc_counter `i -> 2 `i == -> _GO_nDONE `i -> 0 `i 108  ]
{
[; ;main.c: 162: adc_counter=0;
"162
[e = _adc_counter -> -> 0 `i `uc ]
[; ;main.c: 163: GO_nDONE=1;
"163
[e = _GO_nDONE -> -> 1 `i `b ]
"164
}
[e :U 108 ]
"167
}
[e :U 89 ]
"86
[e $U 90  ]
[e :U 91 ]
[; ;main.c: 164: }
[; ;main.c: 167: }
[; ;main.c: 168: }
"168
[e :UE 87 ]
}
"171
[v _button_action `(v ~T0 @X0 1 ef ]
{
[; ;main.c: 171: void button_action(){
[e :U _button_action ]
[f ]
[; ;main.c: 173: if(led_flash_set<11){
"173
[e $ ! < -> _led_flash_set `i -> 11 `i 110  ]
{
[; ;main.c: 174: led_flash_set++;
"174
[e ++ _led_flash_set -> -> 1 `i `uc ]
"175
}
[; ;main.c: 175: }
[e $U 111  ]
"176
[e :U 110 ]
[; ;main.c: 176: else{
{
[; ;main.c: 177: led_flash_set=1;
"177
[e = _led_flash_set -> -> 1 `i `uc ]
"178
}
[e :U 111 ]
[; ;main.c: 178: }
[; ;main.c: 179: eeprom_write(0, led_flash_set);
"179
[e ( _eeprom_write (2 , -> -> 0 `i `uc _led_flash_set ]
[; ;main.c: 180: btn_flag=0;
"180
[e = _btn_flag -> -> 0 `i `uc ]
[; ;main.c: 181: }
"181
[e :UE 109 ]
}
[v F881 `(v ~T0 @X0 1 tf ]
"183
[v _high_isr `IF881 ~T0 @X0 1 e ]
{
[; ;main.c: 183: void interrupt high_isr (void){
[e :U _high_isr ]
[f ]
[; ;main.c: 184: if(ADIF){
"184
[e $ ! _ADIF 113  ]
{
[; ;main.c: 185: ADIF=0;
"185
[e = _ADIF -> -> 0 `i `b ]
[; ;main.c: 186: adc_flag=1;
"186
[e = _adc_flag -> -> 1 `i `uc ]
"187
}
[e :U 113 ]
[; ;main.c: 187: }
[; ;main.c: 188: if(T0IF){
"188
[e $ ! _T0IF 114  ]
{
[; ;main.c: 189: T0IF=0;
"189
[e = _T0IF -> -> 0 `i `b ]
[; ;main.c: 190: if(main_counter<10000){
"190
[e $ ! < _main_counter -> -> 10000 `i `ui 115  ]
{
[; ;main.c: 191: main_counter++;
"191
[e ++ _main_counter -> -> 1 `i `ui ]
"192
}
[e :U 115 ]
[; ;main.c: 192: }
[; ;main.c: 194: if(adc_counter<250){
"194
[e $ ! < -> _adc_counter `i -> 250 `i 116  ]
{
[; ;main.c: 195: adc_counter++;
"195
[e ++ _adc_counter -> -> 1 `i `uc ]
"196
}
[e :U 116 ]
[; ;main.c: 196: }
[; ;main.c: 198: if(milisec<10000){
"198
[e $ ! < _milisec -> -> 10000 `i `ui 117  ]
{
[; ;main.c: 199: milisec++;
"199
[e ++ _milisec -> -> 1 `i `ui ]
"200
}
[; ;main.c: 200: }
[e $U 118  ]
"201
[e :U 117 ]
[; ;main.c: 201: else{
{
[; ;main.c: 202: milisec=0;
"202
[e = _milisec -> -> 0 `i `ui ]
"203
}
[e :U 118 ]
[; ;main.c: 203: }
[; ;main.c: 206: if((milisec>=no_flash_delay)&&(led_flash<led_flash_set)){
"206
[e $ ! && >= _milisec _no_flash_delay < -> _led_flash `i -> _led_flash_set `i 119  ]
{
[; ;main.c: 207: if(GP2==0){
"207
[e $ ! == -> _GP2 `i -> 0 `i 120  ]
{
[; ;main.c: 208: GP2=1;
"208
[e = _GP2 -> -> 1 `i `b ]
[; ;main.c: 209: milisec=0;
"209
[e = _milisec -> -> 0 `i `ui ]
[; ;main.c: 210: led_flash++;
"210
[e ++ _led_flash -> -> 1 `i `uc ]
"211
}
[e :U 120 ]
"212
}
[e :U 119 ]
[; ;main.c: 211: }
[; ;main.c: 212: }
[; ;main.c: 213: if((milisec>=flash_delay)&&(GP2==1)){
"213
[e $ ! && >= _milisec -> _flash_delay `ui == -> _GP2 `i -> 1 `i 121  ]
{
[; ;main.c: 214: GP2=0;
"214
[e = _GP2 -> -> 0 `i `b ]
[; ;main.c: 215: milisec=0;
"215
[e = _milisec -> -> 0 `i `ui ]
"216
}
[e :U 121 ]
[; ;main.c: 216: }
[; ;main.c: 217: if((led_flash==led_flash_set)&&(milisec>=flash_stop)){
"217
[e $ ! && == -> _led_flash `i -> _led_flash_set `i >= _milisec _flash_stop 122  ]
{
[; ;main.c: 218: led_flash=0;
"218
[e = _led_flash -> -> 0 `i `uc ]
[; ;main.c: 219: milisec=0;
"219
[e = _milisec -> -> 0 `i `ui ]
"220
}
[e :U 122 ]
[; ;main.c: 220: }
[; ;main.c: 223: if(GP3==1&&btn_counter<50){
"223
[e $ ! && == -> _GP3 `i -> 1 `i < -> _btn_counter `i -> 50 `i 123  ]
{
[; ;main.c: 224: btn_counter++;
"224
[e ++ _btn_counter -> -> 1 `i `uc ]
"225
}
[e :U 123 ]
[; ;main.c: 225: }
[; ;main.c: 227: if(GP3==0&&btn_counter!=0&&btn_release<50){
"227
[e $ ! && && == -> _GP3 `i -> 0 `i != -> _btn_counter `i -> 0 `i < -> _btn_release `i -> 50 `i 124  ]
{
[; ;main.c: 228: btn_release++;
"228
[e ++ _btn_release -> -> 1 `i `uc ]
"229
}
[e :U 124 ]
[; ;main.c: 229: }
[; ;main.c: 231: if(GP3==0&&btn_counter>40&&btn_release>40){
"231
[e $ ! && && == -> _GP3 `i -> 0 `i > -> _btn_counter `i -> 40 `i > -> _btn_release `i -> 40 `i 125  ]
{
[; ;main.c: 232: btn_flag=1;
"232
[e = _btn_flag -> -> 1 `i `uc ]
[; ;main.c: 233: btn_counter=0;
"233
[e = _btn_counter -> -> 0 `i `uc ]
[; ;main.c: 234: btn_release=0;
"234
[e = _btn_release -> -> 0 `i `uc ]
"235
}
[e :U 125 ]
"240
}
[e :U 114 ]
[; ;main.c: 235: }
[; ;main.c: 240: }
[; ;main.c: 242: }
"242
[e :UE 112 ]
}
